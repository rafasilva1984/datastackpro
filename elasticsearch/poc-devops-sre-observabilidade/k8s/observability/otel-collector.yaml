apiVersion: v1
kind: ConfigMap
metadata: { name: otel-collector-config, namespace: cicd }
data:
  config.yaml: |
    receivers:
      otlp:
        protocols: { grpc: {}, http: {} }
    processors:
      batch: {}
    exporters:
      logging: { verbosity: detailed }
      otlp/elastic:
        endpoint: apm-server.cicd.svc.cluster.local:8200
        tls: { insecure: true }
    service:
      pipelines:
        traces:  { receivers: [otlp], processors: [batch], exporters: [logging, otlp/elastic] }
        metrics: { receivers: [otlp], processors: [batch], exporters: [logging, otlp/elastic] }
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: otel-collector, namespace: cicd }
spec:
  replicas: 1
  selector: { matchLabels: { app: otel-collector } }
  template:
    metadata: { labels: { app: otel-collector } }
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector:0.107.0
        args: ["--config=/etc/otelcol/config.yaml"]
        volumeMounts: [ { name: cfg, mountPath: /etc/otelcol } ]
        ports:
        - { name: otlp-grpc, containerPort: 4317 }
        - { name: otlp-http, containerPort: 4318 }
      volumes:
      - name: cfg
        configMap:
          name: otel-collector-config
          items: [ { key: config.yaml, path: config.yaml } ]
---
apiVersion: v1
kind: Service
metadata: { name: otel-collector, namespace: cicd }
spec:
  selector: { app: otel-collector }
  ports:
  - { name: grpc, port: 4317, targetPort: 4317 }
  - { name: http, port: 4318, targetPort: 4318 }
